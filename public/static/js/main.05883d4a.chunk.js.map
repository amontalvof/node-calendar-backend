{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword1","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","message","placeholder","onChange","Navbar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","eventStartUpdate","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","params","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","eventSetActive","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05883d4a.chunk.js","sourcesContent":["export const types = {\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set active',\n    eventLogout: '[event] Logout event',\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] updated',\n    eventDeleted: '[event] deleted',\n    eventLoaded: '[event] loaded',\n\n    authChecking: '[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null,\n};\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false,\n            };\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false,\n            };\n        case types.authLogout:\n            return {\n                checking: false,\n            };\n        default:\n            return state;\n    }\n};\n","import { types } from '../types/types';\n\n// {\n//     id: '3523551351353535535131',\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add(1, 'hours').toDate(),\n//     notes: 'comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Andy',\n//     },\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload,\n            };\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [...state.events, action.payload],\n            };\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null,\n            };\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map((event) =>\n                    event.id === action.payload.id ? action.payload : event\n                ),\n            };\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    (event) => event.id !== state.activeEvent.id\n                ),\n                activeEvent: null,\n            };\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload],\n            };\n        case types.eventLogout:\n            return {\n                ...initialState,\n            };\n        default:\n            return state;\n    }\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n    modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true,\n            };\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false,\n            };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers =\n    (typeof window !== 'undefined' &&\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n    compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n","const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchWithoutToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseUrl}/${endpoint}`;\n\n    if (method === 'GET') {\n        return fetch(url);\n    } else {\n        return fetch(url, {\n            method,\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data),\n        });\n    }\n};\n\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n    if (method === 'GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token,\n            },\n        });\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-Type': 'application/json',\n                'x-token': token,\n            },\n            body: JSON.stringify(data),\n        });\n    }\n};\n","import moment from 'moment';\n\nexport const prepareEvents = (events = []) => {\n    return events.map((event) => ({\n        ...event,\n        end: moment(event.end).toDate(),\n        start: moment(event.start).toDate(),\n    }));\n};\n","import Swal from 'sweetalert2';\nimport { fetchWithToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\nimport { types } from '../types/types';\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchWithToken('events', event, 'POST');\n            const body = await resp.json();\n            if (body.ok) {\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name,\n                };\n                dispatch(eventAddNew(event));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event,\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event,\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent,\n});\n\nexport const eventStartUpdate = (event) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithToken(\n                `events/${event.id}`,\n                event,\n                'PUT'\n            );\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch(eventUpdated(event));\n            } else {\n                Swal.fire('Error!', body.message, 'error');\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event,\n});\n\nexport const eventStartDelete = () => {\n    return async (dispatch, getState) => {\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch(eventDeleted());\n            } else {\n                Swal.fire('Error!', body.message, 'error');\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventDeleted = () => ({\n    type: types.eventDeleted,\n});\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchWithToken('events');\n            const body = await resp.json();\n            const events = prepareEvents(body.events);\n            dispatch(eventLoaded(events));\n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events,\n});\n\nexport const eventLogout = (params) => ({\n    type: types.eventLogout,\n});\n","import Swal from 'sweetalert2';\nimport { fetchWithoutToken, fetchWithToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport { eventLogout } from './events';\n\nexport const startLogin = (email, password) => {\n    return async (dispatch) => {\n        const resp = await fetchWithoutToken(\n            'auth',\n            { email, password },\n            'POST'\n        );\n        const body = await resp.json();\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-time', new Date().getTime());\n            dispatch(\n                login({\n                    uid: body.uid,\n                    name: body.name,\n                })\n            );\n        } else {\n            Swal.fire('Error!', body.message, 'error');\n        }\n    };\n};\n\nexport const startRegister = (email, password, name) => {\n    return async (dispatch) => {\n        const resp = await fetchWithoutToken(\n            'auth/new',\n            { email, password, name },\n            'POST'\n        );\n        const body = await resp.json();\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-time', new Date().getTime());\n            dispatch(\n                login({\n                    uid: body.uid,\n                    name: body.name,\n                })\n            );\n        } else {\n            Swal.fire('Error!', body.message, 'error');\n        }\n    };\n};\n\nexport const startChecking = () => {\n    return async (dispatch) => {\n        const resp = await fetchWithToken('auth/renew');\n        const body = await resp.json();\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-time', new Date().getTime());\n            dispatch(\n                login({\n                    uid: body.uid,\n                    name: body.name,\n                })\n            );\n        } else {\n            dispatch(checkingFinish());\n        }\n    };\n};\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish,\n});\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user,\n});\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(eventLogout());\n        dispatch(logout());\n    };\n};\n\nconst logout = () => ({\n    type: types.authLogout,\n});\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    };\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value,\n        });\n    };\n\n    return [values, handleInputChange, reset];\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n    const dispatch = useDispatch();\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        loginEmail: '',\n        loginPassword: '',\n    });\n\n    const { loginEmail, loginPassword } = formLoginValues;\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        registerName: '',\n        registerEmail: '',\n        registerPassword1: '',\n        registerPassword2: '',\n    });\n\n    const {\n        registerName,\n        registerEmail,\n        registerPassword1,\n        registerPassword2,\n    } = formRegisterValues;\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        dispatch(startLogin(loginEmail, loginPassword));\n    };\n\n    const handleRegister = (event) => {\n        event.preventDefault();\n        if (registerPassword1 !== registerPassword2) {\n            return Swal.fire('Error!', 'Passwords must be the same.', 'error');\n        }\n        dispatch(startRegister(registerEmail, registerPassword1, registerName));\n    };\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 login-form-1\">\n                        <h3>Log in</h3>\n                        <form onSubmit={handleLogin}>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Email\"\n                                    name=\"loginEmail\"\n                                    value={loginEmail}\n                                    onChange={handleLoginInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    name=\"loginPassword\"\n                                    value={loginPassword}\n                                    onChange={handleLoginInputChange}\n                                />\n                                <p className=\"helpTextLogin\">\n                                    The password must be at least 6 characters\n                                    long.\n                                </p>\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"submit\"\n                                    className=\"btnSubmit\"\n                                    value=\"Login\"\n                                />\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"col-md-6 login-form-2\">\n                        <h3>Sign in</h3>\n                        <form onSubmit={handleRegister}>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Name\"\n                                    name=\"registerName\"\n                                    value={registerName}\n                                    onChange={handleRegisterInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"Email\"\n                                    name=\"registerEmail\"\n                                    value={registerEmail}\n                                    onChange={handleRegisterInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    name=\"registerPassword1\"\n                                    value={registerPassword1}\n                                    onChange={handleRegisterInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Repeat password\"\n                                    name=\"registerPassword2\"\n                                    value={registerPassword2}\n                                    onChange={handleRegisterInputChange}\n                                />\n                                <p className=\"helpTextRgister\">\n                                    The password must be at least 6 characters\n                                    long.\n                                </p>\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"submit\"\n                                    className=\"btnSubmit\"\n                                    value=\"Create account\"\n                                />\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n    const { name } = useSelector((state) => state.auth);\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    };\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">{name}</span>\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\n                <i className=\"fas fa-sign-out-alt\" />\n                <span> Logout</span>\n            </button>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport const CalendarEvent = ({ event }) => {\n    const { title, user } = event;\n    return (\n        <div>\n            <strong>{title}</strong>\n            <span> - {user.name}</span>\n        </div>\n    );\n};\n","import { types } from '../types/types';\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal,\n});\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal,\n});\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport { uiCloseModal } from '../../actions/ui';\nimport {\n    eventStartAddNew,\n    eventClearActiveEvent,\n    eventStartUpdate,\n} from '../../actions/events';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate(),\n};\n\nexport const CalendarModal = () => {\n    const { modalOpen } = useSelector((state) => state.ui);\n    const { activeEvent } = useSelector((state) => state.calendar);\n    const dispatch = useDispatch();\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n    const [formValues, setFormValues] = useState(initEvent);\n\n    const { notes, title, start, end } = formValues;\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent);\n            setDateStart(activeEvent.start);\n            setDateEnd(activeEvent.end);\n        } else {\n            setFormValues(initEvent);\n            setDateStart(initEvent.start);\n            setDateEnd(initEvent.end);\n        }\n    }, [activeEvent, setFormValues]);\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value,\n        });\n    };\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n        dispatch(eventClearActiveEvent());\n        setFormValues(initEvent);\n    };\n\n    const handleStartDateChange = (event) => {\n        setDateStart(event);\n        setFormValues({\n            ...formValues,\n            start: event,\n        });\n    };\n\n    const handleEndDateChange = (event) => {\n        setDateEnd(event);\n        setFormValues({\n            ...formValues,\n            end: event,\n        });\n    };\n\n    const handleSubmitForm = (event) => {\n        event.preventDefault();\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            return Swal.fire(\n                'Error!',\n                'The finish date must be greater than the start date.',\n                'error'\n            );\n        }\n\n        if (title.trim().length < 2) {\n            return setTitleValid(false);\n        }\n\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues));\n        } else {\n            dispatch(eventStartAddNew(formValues));\n        }\n\n        setTitleValid(true);\n        closeModal();\n    };\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            // onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1>{activeEvent ? 'Edit event' : 'New event'} </h1>\n            <hr />\n            <form className=\"container\" onSubmit={handleSubmitForm}>\n                <div className=\"form-group\">\n                    <label>Start date and time</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Finish date and time</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={dateEnd}\n                        minDate={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Title and notes</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${\n                            !titleValid && 'is-invalid'\n                        }`}\n                        placeholder=\"Event title\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        A short description\n                    </small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notes\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        Additional Information\n                    </small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Save</span>\n                </button>\n            </form>\n        </Modal>\n    );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n    const dispatch = useDispatch();\n\n    const handleClickNew = (params) => {\n        dispatch(uiOpenModal());\n    };\n\n    return (\n        <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\n            <i className=\"fas fa-plus\" />\n        </button>\n    );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(eventStartDelete());\n    };\n\n    return (\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\n            <i className=\"fas fa-trash\" />\n            <span> Delete event</span>\n        </button>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport { Navbar } from '../ui/Navbar';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { uiOpenModal } from '../../actions/ui';\nimport {\n    eventClearActiveEvent,\n    eventSetActive,\n    eventStartLoading,\n} from '../../actions/events';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\n// import { messages as espanolMessages } from '../../helpers/calendar-messages-es';\n// import 'moment/locale/es'; // to put the dates of the moment in Spanish\n// moment.locale('es'); // to put the dates of the moment in Spanish\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector((state) => state.calendar);\n    const { uid } = useSelector((state) => state.auth);\n\n    const [lastView, setLastView] = useState(\n        localStorage.getItem('lastView') || 'month'\n    );\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch]);\n\n    const onDoubleClick = () => {\n        dispatch(uiOpenModal());\n    };\n\n    const onSelectEvent = (event) => {\n        dispatch(eventSetActive(event));\n    };\n\n    const onViewChange = (event) => {\n        setLastView(event);\n        localStorage.setItem('lastView', event);\n    };\n\n    const onSelectSlot = () => {\n        dispatch(eventClearActiveEvent());\n    };\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n        // console.log(event, start, end, isSelected);\n        const style = {\n            backgroundColor: uid === event.user._id ? '#367cf7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white',\n        };\n\n        return { style };\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            <Calendar\n                className=\"rbc-calendar\"\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                view={lastView}\n                components={{ event: CalendarEvent }}\n                // messages={espanolMessages}\n            />\n            <CalendarModal />\n            <AddNewFab />\n            {activeEvent && <DeleteEventFab />}\n        </div>\n    );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route\n            {...rest}\n            component={(props) =>\n                isAuthenticated ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"/login\" />\n                )\n            }\n        />\n    );\n};\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route\n            {...rest}\n            component={(props) =>\n                isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\n            }\n        />\n    );\n};\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector((state) => state.auth);\n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch]);\n\n    if (checking) {\n        return (\n            <div className=\"loading\">\n                <h1>Loading...</h1>\n            </div>\n        );\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/login\"\n                        component={LoginScreen}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component={CalendarScreen}\n                        isAuthenticated={!!uid}\n                    />\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}